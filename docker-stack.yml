version: '3.9'

services:

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    networks:
      - monitoring_network
    deploy:
      placement:
        constraints:
          - node.role==manager
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - monitoring_network
    extra_hosts:
      - host.docker.internal:host-gateway
    deploy:
      placement:
        constraints:
          - node.role==manager
    depends_on:
      - node-exporter
      - cadvisor

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./prometheus/alertmanager:/etc/alertmanager:ro
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
    deploy:
      placement:
        constraints:
          - node.role==manager
    networks:
      - monitoring_network
    depends_on:
      - prometheus


  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - --path.rootfs=/host
    ports:
      - target: 9100
        published: 9100
        protocol: tcp
        mode: host
    volumes:
      - /:/host:ro,rslave
    networks:
      - monitoring_network
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 30s
      placement:
        constraints:
          - node.role==worker

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    networks:
      - monitoring_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        window: 60s
      mode: global
      placement:
        constraints:
          - node.role==worker
networks:
  monitoring_network:
    driver: overlay